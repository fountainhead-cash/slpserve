<!DOCTYPE html>
<html lang="en">
<head>
<title>SLPDB Fountainhead</title>
<meta name="viewport" content="width=device-width, initial-scale=1">
<style>
@import url('https://fonts.googleapis.com/css?family=Source+Code+Pro&display=swap');
@import url('https://fonts.googleapis.com/css?family=Noto+Sans+TC');

body {
  font-family: 'Noto Sans TC', sans-serif;
  font-size: 12px;
  margin: 0;
  background: #202124;
}
.content {
  border-bottom: 1px rgba(255,255,255,0.1) solid;
}
.container {
  background: #202124;
  color: white;
}
header {
  display: flex;
}
.flexible {
  flex-grow: 1;
}
header > a {
  display: inline-block;
  color: white;
  font-family: "Helvetica Neue", helvetica, arial;
  font-size: 12px;
  text-decoration: none;
  font-weight: bold;
}
header > .item {
  border-left: 1px solid rgba(255,255,255,0.3);
  padding: 0 10px;
  margin: 10px 0;
}
header > .dark {
  background: rgba(0,0,0,0.8);
  margin: 0;
  padding: 10px;
  font-weight: bold;
}
.align-center {
  text-align: center;
}
pre {
  white-space: pre-wrap; 
}
.table {
  overflow: auto;
}
table {
  background: #2d2d2d;
  table-layout: fixed;
  width: 100%;
  border-collapse: collapse;
}
tr:nth-child(odd) {
  background-color: #323232;
}
th td {
  text-align: center;
}
td.top {
  background: whitesmoke;
  font-weight: bold;
  position: relative;
}
td.top i {
  margin-right: 5px;
}
td {
  -webkit-transition: width 1s;
  transition: width 1s;
}
td.top:hover {
  background: rgba(0,0,0,0.2);
  cursor: pointer;
}
td.top.expanded {
  background: rgba(0,0,0,0.2);
  width: 70%;
}
td {
  word-wrap:break-word;
  font-size: 12px;
  /*border: 1px solid whitesmoke;*/
  padding: 5px;
  color: rgba(0,0,0,0.7);
}
.btn {
  padding: 5px 20px;
  border-radius: 2px;
  text-decoration: none;
  border: 2px solid #2a2a2a;
}
.btn-border {
  color: #2a2a2a;
}
.btn-filled {
  background: #2a2a2a;
  color: #ffffff;
}
#editor {
  width: 100%;
}
.label {
  background: #202124;
  color: white;
  padding: 5px 10px;
}
button {
    padding: 10px;
    background: #202124;
    color: #fff;
    border: none;
    font-size: 14px;
    font-weight: bold;
    cursor: pointer;
}
button:focus {
  outline: 0;
}
.spinner {
  color: white;
  text-align: center;
  padding: 100px;
}
input.url:focus{
  outline: none;
}
input.url {
  padding: 10px;
  background: rgb(57, 59, 66);
  border: none;
  color: white;
  font-family: Menlo, monaco, Courier;
  font-size: 11px;
  transition: background 1000ms ease-in;
  border-radius: 0;
  -webkit-appearance:none;
}
input.url.updated {
  background: gold;
}
a.brand {
  margin: 10px;
  font-size: 16px;
  font-family: "Helvetica Neue", helvetica, arial;
}
.flex {
  display: flex;
}
.label {
  padding: 10px;
}
.clusterize-scroll {
    resize: vertical;
    max-height: initial!important;
    height:300px;
}
main {
  margin-bottom:6rem;
}
.clusterize-no-data td {
    color: #fff;
}
.toggle-section {
    float:right;
}
.toggle-section::before {
  content: "[hide]";
}
.hide-section .toggle-section::before {
  content: "[show]";
}
.hide-section .content {
    display:none;
}

.toggle-section:hover {
    cursor:pointer;
}
</style>

<link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.3.1/css/all.css" integrity="sha384-mzrmE5qonljUremFsqc01SB46JvROS7bZs3IO2EmfFsd15uHvIt+Y8vEf7N7fWAU" crossorigin="anonymous">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/clusterize.js/0.18.0/clusterize.min.css">
<link rel="stylesheet" href="/jsontree.css">
<script src="https://cdnjs.cloudflare.com/ajax/libs/ace/1.4.7/ace.js" integrity="sha384-AaOm2erpSQk7UphBnXabizLwuzla6UQ3p144hr+eHq9zSRH3g7vrwqmI/oFDgUpV" crossorigin="anonymous"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/ace/1.4.7/mode-json.js" integrity="sha384-Ln/PE9p6C3iqRPorLcZqduP4ogn+1vwk8wQz6yHaMSxxcZuxMdkQMQQLpgielBnM" crossorigin="anonymous"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/clusterize.js/0.18.0/clusterize.min.js" integrity="sha384-Bqz84+7ilZh5vuxeq7x9quApI8TUgs5k6/XpDyjk0SS/wZ32pAR0o0/RHgPXRY6a" crossorigin="anonymous"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/handlebars.js/4.0.11/handlebars.min.js" integrity="sha384-hYk5B9UOsQeeI4MBc0EHXEqMaj8jB81VgMt0CTlfcyXe2QMTIQsrdMAEpTKW0e0y" crossorigin="anonymous"></script>
<script src="/jsontree.js"></script>
<script id="grid-template" type="text/x-handlebars-template">
  <table>
    <thead>
      <tr>
        {{#each keys}}
          <td class='top {{this}}'><i class='fas fa-expand-arrows-alt'></i>{{this}}</td>
        {{/each}}
      </tr>
    </thead>
    <tbody id="clusterize_content_unconfirmed" class="clusterize-content">
      <!--{{#each items}}
        <tr>
          {{#each values}}
          <td valign='top' class='cell {{k}}'>{{{v}}}</td>
          {{/each}}
        </tr>
      {{/each}}-->
    </tbody>
  </table>
</script>
<script src="https://unpkg.com/axios/dist/axios.min.js" integrity="sha384-LQc6P0tjydf0IS2VO/iGZcRhIK1mYatxhr+EGHA361ABtAiPhLj0Y9H6zAqto47a" crossorigin="anonymous"></script>
</head>
<body>
  <div class='container'>
    <header>
      <a href='/' class='brand'>SLPDB 1.0 Fountainhead</a>
      <div class='flexible'></div>
      <a target='_blank' href='/explorer-tabular' class='item'><i class='fas fa-screwdriver'></i> View Tabular</a>
      <a target='_blank' href='https://slp.dev/tooling/slpdb/#how-do-i-query-for-slp-data' class='item'><i class='fas fa-book'></i> Documentation</a>
    </header>
    <div class='jumbotron align-center header'>
      <div id='editor'><%=code%></div>
      <div class='flex'>
        <span class='label'>API endpoint</span>
        <input readonly class='flexible url'>
        <button id='query'>Run query</button>
      </div>
    </div>
  </div>
  <main>
    <div id='graphs'>
      <div class='label'>Graphs <span></span><div class="toggle-section"></div></div>
      <div class='content clusterize-scroll' id='graphs-scroll-area'>
        <table>
          <tbody id="graphs-content-area" class="clusterize-content">
            <tr class="clusterize-no-data">
              <td>Loading data…</td>
            </tr>
          </tbody>
        </table>
      </div>
    </div>
    <div id='tokens'>
      <div class='label'>Tokens <span></span><div class="toggle-section"></div></div>
      <div class='content clusterize-scroll' id='tokens-scroll-area'>
        <table>
          <tbody id="tokens-content-area" class="clusterize-content">
            <tr class="clusterize-no-data">
              <td>Loading data…</td>
            </tr>
          </tbody>
        </table>
      </div>
    </div>
    <div id='unconfirmed'>
      <div class='label'>Unconfirmed <span></span><div class="toggle-section"></div></div>
      <div class='content clusterize-scroll' id='unconfirmed-scroll-area'>
        <table>
          <tbody id="unconfirmed-content-area" class="clusterize-content">
            <tr class="clusterize-no-data">
              <td>Loading data…</td>
            </tr>
          </tbody>
        </table>
      </div>
    </div>
    <div id='confirmed'>
      <div class='label'>Confirmed <span></span><div class="toggle-section"></div></div>
      <div class='content clusterize-scroll' id='confirmed-scroll-area'>
        <table>
          <tbody id="confirmed-content-area" class="clusterize-content">
            <tr class="clusterize-no-data">
              <td>Loading data…</td>
            </tr>
          </tbody>
        </table>
      </div>
    </div>
    <div id='statuses'>
      <div class='label'>Statuses <span></span><div class="toggle-section"></div></div>
      <div class='content clusterize-scroll' id='statuses-scroll-area'>
        <table>
          <tbody id="statuses-content-area" class="clusterize-content">
            <tr class="clusterize-no-data">
              <td>Loading data…</td>
            </tr>
          </tbody>
        </table>
      </div>
    </div>
  </main>
<script src="/buffer.min.js"></script>
<script>
const btoa_ext = buf => Buffer.Buffer.from(buf).toString('base64')

var endpoint = window.location.origin + "/q/";
var source   = document.getElementById("grid-template").innerHTML;
var template = Handlebars.compile(source);
var editor;

['tokens', 'unconfirmed', 'confirmed', 'graphs', 'statuses'].forEach((v) => {
  document.querySelector("#" + v + " .label .toggle-section").onclick = function() {
    document.getElementById(v).classList.toggle('hide-section');
  };
});

document.addEventListener("DOMContentLoaded", function(e) {
  editor = ace.edit("editor");
  editor.setTheme("ace/theme/chrome");
  editor.session.setMode("ace/mode/json");
  editor.setShowPrintMargin(false);
  editor.setOptions({
    maxLines: Infinity,
    minLines: 3,
    tabSize: 2,
    useSoftTabs: true,
    fontFamily: 'Source Code Pro',
  })
  editor.getSession().on('change', function() {
    var query = editor.getValue();
    history.pushState(null, null, window.location.origin + "/explorer/" + btoa_ext(query));
    updateUrl(query)
  })
  run()
  document.querySelector("#query").addEventListener("click", function(e) {
    run()
  })
  document.body.addEventListener("click", function(e) {
    if (e.target.classList.contains("top")) {
      if (e.target.classList.contains("expanded")) {
        e.target.classList.remove("expanded");
      } else {
        e.target.classList.add("expanded");
      }
    }
  })
})
var run = function() {
  var query = editor.getValue();
  console.log("query = ", query)
  if (query && query.length > 0) {
    try {
      // make sure it's JSON
      var parsed = JSON.parse(query)
      console.log(parsed)

      if ((parsed && parsed.request) || (parsed && parsed.v) ) {
        updateUrl(query)
        //document.querySelector("main #confirmed .content").innerHTML = "<div class='spinner'><i class='fas fa-4x fa-circle-notch fa-spin'></i></div>";
        //document.querySelector("main #unconfirmed .content").innerHTML = "<div class='spinner'><i class='fas fa-4x fa-circle-notch fa-spin'></i></div>";

        fetch(endpoint + btoa_ext(query), {
        }).then(function(r) {
          return r.json()
        }).then(function(r) {
          render('tokens', r.t ? r.t : [])
          render('unconfirmed', r.u ? r.u : [])
          render('confirmed',   r.c ? r.c : [])
          render('graphs', r.g ? r.g : [])
          render('statuses', r.s ? r.s : [])
        })
      }
    } catch (e) {
      console.log("query invalid json", e)
    }
  }
}
var updateUrl = function(query) {
  var base64 = btoa_ext(query)
  var u = document.querySelector(".url");
  u.value = endpoint + base64;
  u.classList.add("updated");
  setTimeout(function() {
    u.classList.remove("updated");
  }, 500)
}

var render = function(type, items) {
  let data = items.map(function(i, k) {
    console.log(k, i)
    return "<tr><td>"+JSONTree.create(i)+"</td></tr>";
  })

  switch (type) {
    case 'tokens':
      document.querySelector("#tokens .label span").innerHTML = "(" + items.length + ")"

      window.confirmed_clusterize = new Clusterize({
        rows:        data,
        scrollElem:  document.getElementById('tokens-scroll-area'),
        contentElem: document.getElementById('tokens-content-area')
      })
      break;
    case 'confirmed':
      document.querySelector("#confirmed .label span").innerHTML = "(" + items.length + ")"

      window.confirmed_clusterize = new Clusterize({
        rows:        data,
        scrollElem:  document.getElementById('confirmed-scroll-area'),
        contentElem: document.getElementById('confirmed-content-area')
      })
      break;
    case 'unconfirmed':
      document.querySelector("#unconfirmed .label span").innerHTML = "(" + items.length + ")"

      window.unconfirmed_clusterize = new Clusterize({
        rows:        data,
        scrollElem:  document.getElementById('unconfirmed-scroll-area'),
        contentElem: document.getElementById('unconfirmed-content-area')
      })
      break;
    case 'graphs':
      document.querySelector("#graphs .label span").innerHTML = "(" + items.length + ")"

      window.graphs_clusterize = new Clusterize({
        rows:        data,
        scrollElem:  document.getElementById('graphs-scroll-area'),
        contentElem: document.getElementById('graphs-content-area')
      })
      break;
    case 'statuses':
      document.querySelector("#statuses .label span").innerHTML = "(" + items.length + ")"

      window.unconfirmed_clusterize = new Clusterize({
        rows:        data,
        scrollElem:  document.getElementById('statuses-scroll-area'),
        contentElem: document.getElementById('statuses-content-area')
      })
      break;
  }
}
</script>
</body>
</html>
